import tensorflow as tf
import numpy as np
import cv2

IMAGE_HEIGHT = 128
IMAGE_WIDTH = 32
IMAGE_DEPTH = 3

model = tf.keras.models.load_model('app/CNN_multi_entropy_exefile_v1.model')

# def load_image(image_path):
#     img = tf.io.read_file(image_path)
#     img = tf.image.decode_jpeg(img, channels = IMAGE_DEPTH)
#     img = tf.image.resize(img, (IMAGE_HEIGHT, IMAGE_WIDTH))
#     img = tf.cast(img, tf.float32)
#     img = tf.divide(img,255.0)
#     return img

# def predict():
#     img = tf.data.Dataset.from_tensor_slices((['malware_img.png']))
#     img = img.map(load_image)
#     theimg = img.batch(1)
#     predictions = model.predict(x=theimg)
#     result = (list(map('{:%}'.format,predictions[0])))
#     return result

def predict(malware_image):
    result = 0
    # image = cv2.imread(dst)
    image = cv2.cvtColor(np.array(malware_image), cv2.COLOR_BGR2GRAY)
    image_reshape = np.array(image).reshape(-1, IMAGE_HEIGHT, IMAGE_WIDTH, 1)
    image_reshape = image_reshape/255

    predictions = model.predict(tf.reshape(image_reshape,[-1,128,32,1]))
    # result = (list(map('{:%}'.format,predictions[0])))
    result = (list(map('{:f}'.format,predictions[0])))
    
    return result