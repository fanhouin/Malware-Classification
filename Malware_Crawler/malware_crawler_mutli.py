from bs4 import BeautifulSoup #分析html的標籤用, 可以把例如<h1> <p>那些標籤拆開來, 放在array裏
from urllib.request import urlretrieve
import threading
import re #正規表示式
import requests #get or post網頁用
import time
import sys
import os

#url post的時候, 需要用的form data query
#可以看 https://hackmd.io/aQF09eAPSDCFej0qvTUk6A?both
payload = {
    'page':1, #你想去的頁數
    'total_page':29235 #總頁數, 它php的script會判斷最大頁數,會在最大頁數停下來, 這個隨便設都可以
}

#url post的時候, 需要用的form data query, 這是download malware用, 這份code還沒用到它
download = {
    'md5':'01108dbee9f9e77eb14e75dc4ef1f410',
    'action':'download'
}


#使用者帳密的cookie, 跟Trojan PE file type分類的cookie
cookies ={
    'cookiesession1':'XXXXXXXXXXXXXXXXXX',
    'PHPSESSID':'XXXXXXXXXXXXXXXXXXXXXXXXXXX'
}

header = {
    'Accept-Encoding': 'gzip',
    'Content-Type': 'application/x-www-form-urlencoded'
}

label_list={'Backdoor','Trojan','Worm','Adware','Ransom'}

def papa(page_start,page_end):
    for page in range(page_start , page_end):
        print('((((((((((((((',page,'))))))))))))))')
        payload['page'] = page
        res = requests.post('https://owl.nchc.org.tw/search.php', data = payload, cookies = cookies)#post取網頁的html
        soup = BeautifulSoup(res.text,'html.parser') #res.text是整個html的string, 而BeautifulSoup可以在string中分析到html的標籤
        td = soup.select('table.table.table-hover tbody tr td')#td就是每個軟體row的各個資訊
        #time.sleep(7)
        for i in range(600): #每個軟體有6個資訊, 100個就有600個資訊
            if(i % 6 == 0):
                rate_td = td[i+3]
                file_type_td = td[i+1]
                if (rate_td.text != ' Analyzing...' and file_type_td.text == 'PE'): #因為有些分數還在Analyzing, 如果還在Analyzing就跳過
                    fraction = int(re.findall(r'(.+)/.+', rate_td.text)[0]) #正規表示式選擇 44/55 中的 44
                    denominator  = int(re.findall(r'.+/(.+)', rate_td.text)[0])#正規表示式選擇 44/55 中的 55
                    rate = round((fraction/denominator),3)

                    if(rate > 0.8): #計算分數>0.8為可信的惡意軟體
                        name_list = []
                        type_td = td[i+4]
                        type_td_span = type_td.select('span')
                        allexist = True
                        for thespan in type_td_span: #判斷只有一個type
                            if thespan.text in label_list: #***********************這個判斷你想download哪個type的malware********************
                                name_list.append(thespan.text)
                            else:
                                allexist = False
                                break
                        
                        if(allexist):
                            download_path = 'D:/malware_image/malware/'
                            name = ''
                            label = ''
                            name_list.sort()
                            for thename in name_list:
                                if label != '':
                                    label = label + '_'
                                name += thename + '_'
                                label +=  thename
                            name += td[i].text.strip()
                            # print(name)
                            
                            if not os.path.exists(download_path + label):
                                os.mkdir(download_path + label)

                            download_path = download_path + label + '/' + name + '.zip'

                            count = 0
                            while(1):
                                if os.path.exists(download_path):
                                    print('Skip: ' ,name)
                                    break

                                if (label != 'Backdoor' and label !='Backdoor_Trojan' and label != 'Backdoor_Trojan_Worm'):
                                    print('Ignore: ', name)
                                    break

                                download['md5'] = td[i].text.strip()
                                down = requests.post('https://owl.nchc.org.tw/search.php', data = download, cookies = cookies,headers = header)
                                # print(down.headers.get('content-type'))
                                if(down.headers.get('content-type') == 'application/zip'):
                                    open(download_path, 'wb').write(down.content)
                                    print('Download Successful: ',name)
                                    time.sleep(7)
                                    break
                                else:
                                    count += 1
                                    print('Download Try Again',count,':',name)
                                    time.sleep(7)
                                    if count >= 10:
                                        break


if __name__=='__main__':
	papa(int(sys.argv[1]),int(sys.argv[2]))
